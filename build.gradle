plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'ru.vyarus.java-lib' version '1.0.5'
    id 'ru.vyarus.github-info' version '1.1.0'
    id 'ru.vyarus.quality' version '2.3.0'
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'net.researchgate.release' version '2.6.0'
    id 'com.github.ben-manes.versions' version '0.15.0'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '4.1'
}

ext {
    orient = '2.2.26'
    dropwizard = '1.1.4'
}

repositories { jcenter(); mavenCentral(); mavenLocal() }
dependencies {

    provided "com.orientechnologies:orientdb-studio:$orient"

    compile "io.dropwizard:dropwizard-core:$dropwizard"
    compile "com.orientechnologies:orientdb-server:$orient"
    compile "com.orientechnologies:orientdb-tools:$orient"

    testCompile "com.orientechnologies:orientdb-object:$orient"
    testCompile "io.dropwizard:dropwizard-testing:$dropwizard"
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    // used to catch System.exit statements
    testCompile 'com.github.stefanbirkner:system-rules:1.16.1'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'

    // check everything works together
    // lucene includes graph dependency
    testCompile ("com.orientechnologies:orientdb-lucene:$orient")
    testCompile ("com.orientechnologies:orientdb-etl:$orient")
}

group = 'ru.vyarus'
description = 'Embedded OrientDB server for dropwizard'

github {
    user = 'xvik'
    license = 'MIT'
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = 'xvik'
        name = project.name
        desc = project.description
        labels = ['dropwizard', 'orientdb']
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = true
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed', 'standard_error'
        exceptionFormat 'full'
    }
    // maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true


task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') {
    doLast {
        java.awt.Desktop.getDesktop().open(file('build/reports/project/dependencies/root.html'))
    }
}
