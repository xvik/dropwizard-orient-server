import com.github.benmanes.gradle.versions.updates.DependencyUpdatesTask
import java.awt.*

buildscript {
    apply from: "gradle/buildscript.gradle", to: buildscript
}

group = 'ru.vyarus'
description = 'Embedded OrientDB server for dropwizard'

// convention: project.name == github project name == bintray package page
project.ext {
    build = {
        gradle = 2.2
        java = 1.7
        // if not empty runs animal sniffer on compile to guarantee binary compatibility; set '' to disable
        signature = 'org.codehaus.mojo.signature:java17:+@signature'
    }
    github = {
        user = 'xvik'
    }
    bintray = {
        user = project.hasProperty('bintrayUser') ? bintrayUser : 'USER' // configured in ~/.gradle/gradle.properties
        key = project.hasProperty('bintrayKey') ? bintrayKey : 'KEY' // configured in ~/.gradle/gradle.properties
        repo = 'xvik'
        tags = ['dropwizard', 'orientdb']
        dryRun = false // whether to run this as dry-run, without deploying (TEST RUN)
        publish = true //If version should be auto published after an upload
        signFiles = true // true to gpg sign files on bintray (certificate must be installed on bintray account)
        gpgPassphrase = project.hasProperty('gpgPassphrase') ? gpgPassphrase : '' // optionally configured in ~/.gradle/gradle.properties if certificate requires it
    }
    license = 'MIT'
    licenseDesc = 'The MIT License'
    // extend pom for maven central acceptance
    pomConfig = {
        scm {
            url github.scm
            connection github.scmConnection
            developerConnection github.scmConnection
        }
        licenses {
            license {
                name licenseDesc
                url github.licenseUrl
                distribution "repo"
            }
        }
        developers {
            developer {
                id "xvik"
                name "Vyacheslav Rusakov"
                email "vyarus@gmail.com"
            }
        }
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'project-report'

apply from: 'gradle/build.gradle'
apply from: 'gradle/github.gradle'
apply from: 'gradle/bintray.gradle'
apply from: 'gradle/release.gradle'
apply from: 'gradle/maven.gradle'
apply from: 'gradle/quality.gradle'


repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile "io.dropwizard:dropwizard-core:0.8.0-rc1"
    compile "com.orientechnologies:orientdb-server:2.0.3"
    compile "com.orientechnologies:orientdb-tools:2.0.3"

    testCompile 'junit:junit:4.11'
    testCompile 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.7'
    testCompile "io.dropwizard:dropwizard-testing:0.8.0-rc1"
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    // used to catch System.exit statements
    testCompile 'com.github.stefanbirkner:system-rules:1.7.0'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
}

task checkOutOfDate(type: DependencyUpdatesTask, description: 'Checks dependencies updates availability') {
    revision 'release'
}

task showDependenciesTree(dependsOn: 'htmlDependencyReport', description:
        'Generates dependencies tree report and opens it in browser (useful to analyze dependencies)') << {
    Desktop.getDesktop().open(file('/build/reports/project/dependencies/root.html'))
}

task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal', description: 'Install to local maven repository') << {
    logger.warn "INSTALLED $project.group:$project.name:$project.version"
}
