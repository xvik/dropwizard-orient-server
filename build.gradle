plugins {
    id 'com.gradle.build-scan' version '3.5.1'
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'ru.vyarus.java-lib' version '2.1.0'
    id 'ru.vyarus.github-info' version '1.2.0'
    id 'ru.vyarus.quality' version '4.4.0'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.36.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'ru.vyarus.mkdocs' version '2.0.1'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '5.6.4'
}

ext {
    orient = '3.1.7'
    dropwizard = '2.0.18'
    groovy = '2.5.14'
}

repositories { jcenter(); mavenCentral(); mavenLocal() }
dependencyManagement {
    imports {
        mavenBom "io.dropwizard:dropwizard-bom:$dropwizard"
    }
    dependencies {
        dependency 'org.spockframework:spock-core:1.3-groovy-2.5'
        // groovy bundled with spock (2.5.2) does not work well with java 11
        dependency "org.codehaus.groovy:groovy:$groovy"
        dependency "org.codehaus.groovy:groovy-json:$groovy"
        dependency "org.codehaus.groovy:groovy-macro:$groovy"
        dependency "org.codehaus.groovy:groovy-nio:$groovy"
        dependency "org.codehaus.groovy:groovy-sql:$groovy"
        dependency "org.codehaus.groovy:groovy-templates:$groovy"
        dependency "org.codehaus.groovy:groovy-test:$groovy"
        dependency "org.codehaus.groovy:groovy-xml:$groovy"
    }
}
dependencies {
    provided 'com.github.spotbugs:spotbugs-annotations:3.1.2'
    provided "com.orientechnologies:orientdb-studio:$orient"

    implementation 'io.dropwizard:dropwizard-core'
    implementation "com.orientechnologies:orientdb-server:$orient"
    implementation "com.orientechnologies:orientdb-tools:$orient"

    testImplementation "com.orientechnologies:orientdb-object:$orient"
    testImplementation 'io.dropwizard:dropwizard-testing'
    testImplementation 'org.spockframework:spock-core'
    // used to catch System.exit statements
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'

    // check everything works together
    // lucene includes graph dependency
    testImplementation "com.orientechnologies:orientdb-lucene:$orient"
    testImplementation "com.orientechnologies:orientdb-etl:$orient"
    // OLDAPImporter by default is released only with Enterprise Edition, but technically itâ€™s part
    // of the security module, that is open-source, so you can add it to your CE distribution
    testImplementation "com.orientechnologies:orientdb-security:$orient"
}

group = 'ru.vyarus'
description = 'Embedded OrientDB server for dropwizard'

github {
    user = 'xvik'
    license = 'MIT'
}

mkdocs.publish {
    docPath = '3.0.0'
    rootRedirect = true
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

// java 11 auto module name
jar {
    manifest {
        attributes 'Automatic-Module-Name': "$project.group.$project.name"
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = 'xvik'
        name = project.name
        desc = project.description
        labels = ['dropwizard', 'orientdb']
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = true
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'

    jacoco {
        excludes = ['com.orientechnologies.*']
    }
    // appveyor fix
    systemProperty 'jna.nosys', 'true'
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true


task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') {
    doLast {
        java.awt.Desktop.getDesktop().open(file('build/reports/project/dependencies/root.html'))
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishOnFailure()
}
